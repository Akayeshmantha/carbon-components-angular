//
// buttons
// --------------------------------------------------

// import mixins
@import "buttons.mixins";

button.btn {
    padding: $btn-padding;
    border-width: $btn-border-width;
    border-style: solid;
    height: $btn-height;
	font-weight: $btn-font;
    .size-sm &, &.size-sm {
        height: $btn-height-sm;
		font-size: $btn-font--size-sm;
    }
    .size-lg &, &.size-lg {
        height: $btn-height-lg
    }
    .size-xlg &, &.size-xlg {
        height: $btn-height-xlg
    }
    @include btn-variant('primary');

	&.btn-link {
		padding: 0;
		border: none;
		border-bottom: 1px solid color("blue", 50);
		font-size: 14px;
		color: color("blue", 50);
		margin: 10px auto 14px auto;
		background: none;
		height: auto;

		&:hover {
			box-shadow: none;
			border-bottom-width: 3px;
			margin-bottom: 12px;  // change margin to compensate for thicker border
		}
	}
    .theme-blue & {
        @include btn-variant('primary-bt');
    }

    &.btn-secondary {
        @include btn-variant('secondary');
         .theme-blue & {
            @include btn-variant('secondary-bt');
        }
    }
}

.btn-group {
    display: inline-block;

    button.btn {
        @include btn-variant('secondary',  $active: true, $focusDifferent:  true);
        float: left;
        border-left-width: 0;

        &:first-child {
            border-left-width: $btn-border-width;
        }
        .theme-blue & {
            @include btn-variant('secondary-bt', $active: true, $focusDifferent: true);
        }
    }
}

//
// 6) Buttons
//
// - Icons
// - Groups
// - Add-ons
//
// Define text, background, and border color.
// ====================================

$btn-border-width:  2px !default;
$btn-border-style:  solid !default;

$btn-font-weight:   $font-weight-base !default;

$btn-padding-y:   0 !default;
$btn-padding-x:   rem($spacer) !default;
$btn-margin-x:    map-get($spacers, 2) !default;

$btn-size-default-key:  md !default;
$btn-sizes: (
  sm: (
    height: 20px,
    font-size: $font-size-sm
  ),
  md: (
    height: 30px,
    font-size: $font-size-base
  ),
  lg: (
    height: 40px,
    font-size: $font-size-base
  ),
  xl: (
    height: 50px,
    font-size: $font-size-base
  )
) !default;

$btn-icon-margin-x:   map-get($spacers, 2) !default;

$btn-group-sizes:             sm lg !default; // leave out default to prevent redundancy
$btn-group-standards:         primary secondary secondary-white !default;
$btn-group-standards-active:  null primary primary-white !default;

$btn-disabled-border-width:   $stroke-width !default;
$btn-disabled-border-style:   $stroke-disabled-style !default;

$m_btns: (
  primary: (
    color: color("white", 0),
    color-disabled: color("gray", 50),
    bg: color("blue", 50),
    bg-disabled: transparent,
    border-color: color("blue", 50),
    border-color-disabled: color("gray", 50),
    box-shadow-hover-focus: inset 0 0 0 1px #{color("white", 0)}
  ),
  primary-white: (
    color: color("blue", 50),
    color-disabled: color("white", 0),
    bg: color("white", 0),
    bg-disabled: transparent,
    border-color: color("white", 0),
    border-color-disabled: color("white", 0),
    box-shadow-hover-focus: inset 0 0 0 1px #{color("blue", 50)}
  ),
  secondary: (
    color: color("blue", 50),
    color-disabled: color("gray", 50),
    bg: color("white", 0),
    bg-disabled: transparent,
    border-color: color("blue", 50),
    border-color-disabled: color("gray", 50),
    box-shadow-hover-focus: inset 0 0 0 2px #{color("white", 0)} unquote(",") inset 0 0 0 3px #{color("blue", 50)},
    box-shadow-hover-focus-sm: inset 0 0 0 1px #{color("white", 0)} unquote(",") inset 0 0 0 2px #{color("blue", 50)}
  ),
  secondary-white: (
    color: color("white", 0),
    color-disabled: color("white", 0),
    bg: color("blue", 50),
    bg-disabled: transparent,
    border-color: color("white", 0),
    border-color-disabled: color("white", 0),
    box-shadow-hover-focus: inset 0 0 0 2px #{color("blue", 50)} unquote(",") inset 0 0 0 3px #{color("white", 0)},
    box-shadow-hover-focus-sm: inset 0 0 0 1px #{color("blue", 50)} unquote(",") inset 0 0 0 2px #{color("white", 0)}
  )
) !default;

$btn-add-on-padding-x:  map-get($spacers, 2) !default;
$btn-add-on-hover-focus-box-shadow:  inset 0 0 0 1px color("white", 0), inset 0 0 0 2px color("blue", 50) !default;

///////////////////////////////////////
// Button mixins
///////////////////////////////////////

//
// Base styles for each standard
// ====================================

@mixin m_btn($standard, $size: $btn-size-default-key, $addon: false) {
	// Get $standard properties
	$styles: map-get($m_btns, $standard);

	@include m_btn-size($size);

	padding-top: $btn-padding-y;
	padding-bottom: $btn-padding-y;

	@if $addon == true {
	  padding-right: $btn-add-on-padding-x - $btn-border-width;
	  padding-left: $btn-add-on-padding-x - $btn-border-width;
	} @else {
	  padding-right: $btn-padding-x;
	  padding-left: $btn-padding-x;
	}

	border-width: $btn-border-width;
	border-style: $btn-border-style;
	border-color: map-get($styles, border-color);

	background: map-get($styles, bg);

	color: map-get($styles, color);
	font-weight: $btn-font-weight;

	cursor: pointer;

	// Apply hover and focus styles
	@if $size == sm and ($standard == secondary or $standard == secondary-white) {
	  @include m_hover-focus {
		box-shadow: map-get($styles, box-shadow-hover-focus-sm);
	  }
	} @else {
	  @include m_hover-focus {
		box-shadow: map-get($styles, box-shadow-hover-focus);
	  }
	}
  }

  //
  // Sizes
  // ====================================

  @mixin m_btn-size($size: $btn-size-default-key) {
	// Get $size properties
	$styles: map-get($btn-sizes, $size);

	height: map-get($styles, height);
	font-size: map-get($styles, font-size);
	line-height: calc(#{map-get($styles, height)} - #{$btn-border-width} * 2);
  }

  //
  // Disabled state
  // ====================================

  @mixin m_btn-disabled($standard, $size: $btn-size-default-key) {
	// Get $standard properties
	$styles: map-get($m_btns, $standard);

	// Recalculate line height to account for border width change
	@include m_btn-disabled-line-height($size);

	border-width: $btn-disabled-border-width;
	border-style: $btn-disabled-border-style;
	border-color: map-get($styles, border-color-disabled);

	background: map-get($styles, bg-disabled);

	color: map-get($styles, color-disabled);

	box-shadow: none;
	cursor: not-allowed;
  }

  @mixin m_btn-disabled-line-height($size: $btn-size-default-key) {
	// Get $size properties
	$styles: map-get($btn-sizes, $size);

	line-height: calc(#{map-get($styles, height)} - #{$btn-disabled-border-width} * 2);
  }


///////////////////////////////////////
// Buttons
///////////////////////////////////////

//
// Generate button classes
//
// 1. Do not create a class for the default size.
// ====================================

button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  @each $standard in map-keys($m_btns) {
    &.btn--#{$standard} {
      @include m_btn($standard);

      &:disabled {
        @include m_btn-disabled($standard);
      }
    }

    &.btn--#{$standard}-addon {
      @include m_btn($standard, $addon: true);

      &:disabled {
        @include m_btn-disabled($standard);
      }
    }

    @each $size in map-keys($btn-sizes) {
      @if $size != $btn-size-default-key { // 1
        &.btn--#{$standard}-#{$size} {
          @include m_btn($standard, $size);

          &:disabled {
            @include m_btn-disabled($standard, $size);
          }
        }
      }
    }
  }
}

//
// Contextual button classes
//
// For button action paired with an icon.
//
// 1. Vertically center by subtracting button border.
// 2. Icon buttons mirror "secondary" and "secondary-white" standards.
// ====================================

button {
  &.btn--icon,
  &.btn--icon-white {
    svg {
      margin-top: -$btn-border-width; // 1
      margin-right: $btn-icon-margin-x;
      margin-left: -$btn-icon-margin-x;
    }
  }

  &.btn--icon {
    @include m_btn("secondary"); // 2

    &:disabled {
      @include m_btn-disabled("secondary"); // 2
    }
  }

  &.btn--icon-white {
    @include m_btn("secondary-white"); // 2

    &:disabled {
      @include m_btn-disabled("secondary-white"); // 2
    }
  }
}
